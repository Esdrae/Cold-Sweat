buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

group = 'dev.momostudios'
version = '2.2-b05e'

java {
    archivesBaseName = 'ColdSweat'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'parchment', version: '2022.03.06-1.16.5'
    accessTransformer = file("src/main/resources/META-INF/coldsweat_at.cfg")
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'coldsweat'
            mods {
                coldsweat {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'coldsweat'
            mods {
                coldsweat {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'coldsweat'
            mods {
                coldsweat {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'cold_sweat', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                cold_sweat {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "cold_sweat.mixin-refmap.json"
    config 'cold_sweat.mixin.json'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    mavenCentral()
}

dependencies {
    implementation 'com.github.t9t.minecraft-rcon-client:minecraft-rcon-client:1.0.0'
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    runtimeOnly fg.deobf("curse.maven:spark-361579:3767277")
    runtimeOnly fg.deobf("curse.maven:jei-238222:4371666")
    runtimeOnly fg.deobf("curse.maven:atmospheric-362393:3553332")
    runtimeOnly fg.deobf("curse.maven:blueprint-382216:3607198")
    runtimeOnly fg.deobf("curse.maven:oh-the-biomes-youll-go-247560:4024011")
    runtimeOnly fg.deobf("curse.maven:biomes-o-plenty-220318:3913914")
    runtimeOnly fg.deobf("curse.maven:serene-seasons-291874:4537666")
    runtimeOnly fg.deobf("curse.maven:coroutil-237749:3586476")
    runtimeOnly fg.deobf("curse.maven:tinkers-construct-74072:3695126")
    runtimeOnly fg.deobf("curse.maven:mantle-74924:3631982")
    runtimeOnly fg.deobf("curse.maven:serene-seasons-291874:4537666")

    implementation fg.deobf("curse.maven:curios-309927:4419403")
    implementation fg.deobf("curse.maven:armor-underwear-mod-310383:3232088")
    implementation fg.deobf("curse.maven:carrots-lib-311327:3231845")
    implementation fg.deobf("curse.maven:create-328085:3536025")
    implementation fg.deobf("curse.maven:flywheel-486392:3535459")

    compileOnly fg.deobf("curse.maven:better-weather-400714:3420517")
    compileOnly fg.deobf("curse.maven:serene-api-291874:4537669")
    compileOnly fg.deobf("curse.maven:vampirism-233029:4640398")
    compileOnly fg.deobf("curse.maven:werewolves-417851:4662189")
    compileOnly fg.deobf("curse.maven:environmental-388992:3561534")
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "cold_sweat",
                "Specification-Vendor"    : "Mikul",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Mikul",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakerClass"            : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "cold_sweat.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
